{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c182be00-30be-4f78-ab69-723bf44f633d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER SALARY:: 600\n",
      "HOW MANY YEARS DID YOU SERVE? 7\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "YOUR BOUNS IS RS  630.0\n"
     ]
    }
   ],
   "source": [
    "#1\n",
    "user_salary = int(input(\"ENTER SALARY::\"))\n",
    "service_time = int(input(\"HOW MANY YEARS DID YOU SERVE?\"))\n",
    "bouns = (user_salary * 5)/100\n",
    "if service_time > 5:\n",
    "    user_salary += bouns\n",
    "    print(\"YOUR BOUNS IS RS \",user_salary)\n",
    "else:\n",
    "    print(\"NO BOUNS FOR YOU \",user_salary)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5d253630-d9e8-432c-a675-0669c6387096",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER YOUR AGE:: 18\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ELIGIBLE\n"
     ]
    }
   ],
   "source": [
    "#2\n",
    "user_input =int(input(\"ENTER YOUR AGE::\"))\n",
    "if  user_input >17 :\n",
    "    print(\"ELIGIBLE\")\n",
    "else:\n",
    "    print(\"NOT ELIGIBLE\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "23e1f2b7-43ef-47a6-b6be-546665c2c572",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER NUMBER:: 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EVEN\n"
     ]
    }
   ],
   "source": [
    "#3\n",
    "user_number = int(input(\"ENTER NUMBER::\"))\n",
    "if user_number%2 == 0:\n",
    "    print(\"EVEN\")\n",
    "else:\n",
    "    print(\"ODD\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f0cf1a57-75c9-48c4-a8fc-86f00060c734",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER NUMBER:: 9\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9 is not  divisible\n"
     ]
    }
   ],
   "source": [
    "#4\n",
    "user_number = int(input(\"ENTER NUMBER::\"))\n",
    "if user_number%7 == 0:\n",
    "    print(user_number ,\"is divisible\")\n",
    "else:\n",
    "    print(user_number ,\"is not  divisible\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0b3ea65e-bd62-42b3-a184-890c6d9c3916",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER NUMBER:: 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BYE\n"
     ]
    }
   ],
   "source": [
    "#5\n",
    "user_number = int(input(\"ENTER NUMBER::\"))\n",
    "if user_number%5 == 0:\n",
    "    print(\"HELLO\")\n",
    "else:\n",
    "    print(\"BYE\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "0e00c40a-965b-4363-96d2-50630924c5fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER ELECTRICITY UNIT:: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "YOUR BILL IS RS  1000\n"
     ]
    }
   ],
   "source": [
    "#6\n",
    "user_electricity_unit = int(input(\"ENTER ELECTRICITY UNIT::\"))\n",
    "if user_electricity_unit > 0 and user_electricity_unit<= 100:\n",
    "    unit = 0\n",
    "    formula = user_electricity_unit * unit\n",
    "    print(\"YOUR BILL IS RS \",formula)\n",
    "elif user_electricity_unit > 100 and user_electricity_unit<= 200:\n",
    "    unit = 5\n",
    "    formula = user_electricity_unit * unit\n",
    "    print(\"YOUR BILL IS RS \",formula)\n",
    "elif user_electricity_unit > 200:\n",
    "    unit = 10\n",
    "    formula = user_electricity_unit * unit\n",
    "    print(\"YOUR BILL IS RS \",formula)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "39f9178f-7063-4d32-9ec9-04f702eebe10",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER NUMBER:: 142336899\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n"
     ]
    }
   ],
   "source": [
    "#7\n",
    "user_number = int(input(\"ENTER NUMBER::\"))\n",
    "user_number = str(user_number)\n",
    "user_length = len(user_number)\n",
    "user_last_digit = int(user_number[user_length-1])\n",
    "print(user_last_digit)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "7ebc32b1-c2fa-4f9f-8320-4624fd274ddf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER NUMBER:: 14329\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yes it is .\n"
     ]
    }
   ],
   "source": [
    "#8\n",
    "user_number = int(input(\"ENTER NUMBER::\"))\n",
    "user_number = str(user_number)\n",
    "user_length = len(user_number)\n",
    "user_last_digit = int(user_number[user_length-1])\n",
    "if user_last_digit%3 == 0:\n",
    "    print(\"yes it is .\")\n",
    "else:\n",
    "    print(\"no,its not\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "41781438-de64-48e4-b603-431f1026dc96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER LENGTH:: 78999\n",
      "ENTER BREATH:: 8933753\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RECTANGLE\n"
     ]
    }
   ],
   "source": [
    "#9\n",
    "length = int(input(\"ENTER LENGTH::\"))\n",
    "breath = int(input(\"ENTER BREATH::\"))\n",
    "if length == breath:\n",
    "    print(\"SQUARE\")\n",
    "else:\n",
    "    print(\"RECTANGLE\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "6ce014c7-ff7b-4740-9bcd-11cc01d704dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER FIRST NUMBER:: 45\n",
      "ENTER SECOND NUMBER:: 150\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GREATER NUMBER IS 150\n"
     ]
    }
   ],
   "source": [
    "#10\n",
    "first_number = int(input(\"ENTER FIRST NUMBER::\"))\n",
    "second_number =int(input(\"ENTER SECOND NUMBER::\"))\n",
    "if first_number > second_number:\n",
    "    print(\"GREATER NUMBER IS\",first_number)\n",
    "else:\n",
    "    print(\"GREATER NUMBER IS\",second_number)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b8f0122b-6e26-4fd6-ad2e-b57f9a9ca5da",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7d6236ed-68fc-458d-a852-dc59c416ac12",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER QUANTITY:: 500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AFTER 10% DISCOUNT RS  5000.0\n"
     ]
    }
   ],
   "source": [
    "#11\n",
    "item_quantity =int(input(\"ENTER QUANTITY::\"))\n",
    "one_item = 100\n",
    "total_price = item_quantity*100\n",
    "if total_price >= 1000:\n",
    "    discount = (total_price*10)/100\n",
    "    print(\"AFTER 10% DISCOUNT RS \",discount)\n",
    "else:\n",
    "    print(\"NO DISCOUNT YOUR TOTAL PRICE IS RS \",total_price)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c6956d02-465d-4dcd-81e9-a67b5aaa0251",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER MARKS:: 100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A\n"
     ]
    }
   ],
   "source": [
    "#12\n",
    "marks = int(input(\"ENTER MARKS::\"))\n",
    "if marks < 25:\n",
    "    print(\"F\")\n",
    "elif marks > 25 and marks <= 45:\n",
    "    print(\"E\")\n",
    "elif marks > 45 and marks <= 50:\n",
    "    print(\"D\")\n",
    "elif marks > 50 and marks <= 60:\n",
    "    print(\"C\")\n",
    "elif marks > 60 and marks <= 80:\n",
    "    print(\"B\")\n",
    "else:\n",
    "    print(\"A\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b4b8b10e-7b75-4e30-8ac4-308d801b57cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "PERSON1 = ENTER AGE:: 18\n",
      "PERSON2 = ENTER AGE:: 60\n",
      "PERSON3 = ENTER AGE:: 38\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PERSON_2 IS OLDEST\n",
      "PERSON_1 IS YOUNGEST\n"
     ]
    }
   ],
   "source": [
    "#13\n",
    "person_1 =int(input(\"PERSON1 = ENTER AGE::\"))\n",
    "person_2 =int(input(\"PERSON2 = ENTER AGE::\"))\n",
    "person_3 =int(input(\"PERSON3 = ENTER AGE::\"))\n",
    "if person_1 > person_2 and person_1 > person_3:\n",
    "    print(\"PERSON_1 IS OLDEST\")\n",
    "elif person_2 > person_1 and person_2 > person_3:\n",
    "    print(\"PERSON_2 IS OLDEST\")\n",
    "elif person_3 > person_1 and person_3 > person_2:\n",
    "    print(\"PERSON_3 IS OLDEST\")\n",
    "if person_1 < person_2 and person_1 < person_3:\n",
    "    print(\"PERSON_1 IS YOUNGEST\")\n",
    "elif person_2 < person_1 and person_2 < person_3:\n",
    "    print(\"PERSON_2IS YOUNGEST\")\n",
    "elif person_3 < person_1 and person_3 < person_2:\n",
    "    print(\"PERSON_3 IS YOUNGEST\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "aa2f3182-b4ce-4d17-ab9d-a46170686f7f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER NUMBER OF CLASSES HELD:: 100\n",
      "ENTER NUMBER OF CLASSES ATTEND:: 50\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "not allowed\n"
     ]
    }
   ],
   "source": [
    "#14\n",
    "class_held =int(input(\"ENTER NUMBER OF CLASSES HELD::\"))\n",
    "class_attend =int(input(\"ENTER NUMBER OF CLASSES ATTEND::\"))\n",
    "attendence_percentage = (class_attend*100)/class_held\n",
    "if attendence_percentage >= 75:\n",
    "    print(\"allowed\")\n",
    "else:\n",
    "    print(\"not allowed\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a868f085-2429-4663-8151-dac0ca06652a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER NUMBER OF CLASSES HELD:: 100\n",
      "ENTER NUMBER OF CLASSES ATTEND:: 50\n",
      "MEDICAL CAUSE (Y/N):: Y\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "allowed\n"
     ]
    }
   ],
   "source": [
    "#15\n",
    "class_held =int(input(\"ENTER NUMBER OF CLASSES HELD::\"))\n",
    "class_attend =int(input(\"ENTER NUMBER OF CLASSES ATTEND::\"))\n",
    "attendence_percentage = (class_attend*100)/class_held\n",
    "user_medical_issue = input(\"MEDICAL CAUSE (Y/N)::\")\n",
    "if attendence_percentage >= 75:\n",
    "    print(\"allowed\")\n",
    "elif attendence_percentage <= 75 and user_medical_issue == \"Y\":\n",
    "    print(\"allowed\")\n",
    "elif attendence_percentage <= 75 and user_medical_issue == \"N\":\n",
    "    print(\"NOT allowed\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8abb6342-e1d0-4e01-8a1d-5102de5ba05b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER YEAR:: 2014\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ITS NOT A LEAP YEAR\n"
     ]
    }
   ],
   "source": [
    "#16\n",
    "year = int(input(\"ENTER YEAR::\"))\n",
    "if year % 4 == 0:\n",
    "    print(\"ITS A LEAP YEAR\")\n",
    "else:\n",
    "    print(\"ITS NOT A LEAP YEAR\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7a4d4c59-e4ba-4800-ba3d-89e6b1b6638a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "ENTER AGE:: 40\n",
      "ENTER GENDER(M/F):: M\n",
      "ENTER MATRIAL STATUS(Y/N):: Y\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "YOU ARE  ELIGIBLE FOR WORK ONLY IN URBAN AREAS\n"
     ]
    }
   ],
   "source": [
    "#17\n",
    "user_age = int(input(\"ENTER AGE::\"))\n",
    "user_gender = input(\"ENTER GENDER(M/F)::\")\n",
    "user_matrial_status = input(\"ENTER MATRIAL STATUS(Y/N)::\")\n",
    "if user_gender == \"F\":\n",
    "    print(\"YOU CAN ONLY WORK IN URBAN AREAS\")\n",
    "elif user_gender == \"M\" and user_age >= 20 and user_age < 40 :\n",
    "    print(\"YOU ARE ELIGIBLE FOR WORK FROM ANYWHERE\")\n",
    "elif user_gender == \"M\" and user_age >=40 and user_age <= 60 :\n",
    "    print(\"YOU ARE  ELIGIBLE FOR WORK ONLY IN URBAN AREAS\")\n",
    "else:\n",
    "    print(\"ERROR\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "70c38c8a-8507-4340-b9ae-d47ddf797a1a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "anaconda-panel-2023.05-py310",
   "language": "python",
   "name": "conda-env-anaconda-panel-2023.05-py310-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
